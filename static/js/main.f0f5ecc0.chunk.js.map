{"version":3,"sources":["api.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","App.tsx","index.tsx","theme.ts"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","Chart","coinId","useQuery","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","refetchInterval","isLoading","data","type","series","name","map","price","close","options","theme","mode","chart","height","width","toolbar","show","background","stroke","curve","grid","yaxis","xaxis","labels","axisTicks","axisBorder","categories","time_close","fill","gradient","gradientToColors","stops","colors","tooltip","y","formatter","value","toFixed","Price","Container","styled","div","Header","header","Title","h1","props","accentColor","Loader","span","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","textColor","Coin","params","useParams","state","useLocation","chartMatch","useMatch","priceMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","tickersLoading","tickersData","loading","Helmet","rank","symbol","quotes","USD","description","total_supply","max_supply","to","path","element","CoinsList","ul","li","bgColor","Img","img","Coins","console","log","slice","coin","pathname","id","src","toLocaleLowerCase","Router","GlobalStyle","createGlobalStyle","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.f0f5ecc0.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\r\n\r\nexport function fetchCoins() {\r\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\r\n}\r\n\r\nexport function fetchCoinInfo(coinId: string) {\r\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\nexport function fetchCoinTickers(coinId: string) {\r\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\nexport function fetchCoinHistory(coinId: string) {\r\n  const endDate = Math.floor(Date.now() / 1000);\r\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\r\n  return fetch(\r\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\r\n  ).then((response) => response.json());\r\n}\r\n","import { useQuery } from \"react-query\";\r\nimport { fetchCoinHistory } from \"../api\";\r\nimport ApexChart from \"react-apexcharts\";\r\n\r\ninterface IHistorical {\r\n  time_open: string;\r\n  time_close: string;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n  volume: number;\r\n  market_cap: number;\r\n}\r\n\r\ninterface CharProps {\r\n  coinId: string;\r\n}\r\n\r\nfunction Chart({ coinId }: CharProps) {\r\n  const { isLoading, data } = useQuery<IHistorical[]>(\r\n    [\"ohlcv\", coinId],\r\n    () => fetchCoinHistory(coinId),\r\n    {\r\n      refetchInterval: 10000,\r\n    }\r\n  );\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        \"Loading chart...\"\r\n      ) : (\r\n        <ApexChart\r\n          type=\"line\"\r\n          series={[\r\n            {\r\n              name: \"Price\",\r\n              data: data?.map((price) => price.close),\r\n            },\r\n          ]}\r\n          options={{\r\n            theme: { mode: \"dark\" },\r\n            chart: {\r\n              height: 300,\r\n              width: 500,\r\n              toolbar: { show: false },\r\n              background: \"transparent\",\r\n            },\r\n            stroke: { curve: \"smooth\", width: 5 },\r\n            grid: { show: false },\r\n            yaxis: { show: false },\r\n            xaxis: {\r\n              labels: { show: false },\r\n              axisTicks: { show: false },\r\n              axisBorder: { show: false },\r\n              type: \"datetime\",\r\n              categories: data?.map((price) => price.time_close),\r\n            },\r\n            fill: {\r\n              type: \"gradient\",\r\n              gradient: { gradientToColors: [\"#00b894\"], stops: [0, 100] },\r\n            },\r\n            colors: [\"#0984e3\"],\r\n            tooltip: {\r\n              y: { formatter: (value) => `$${value.toFixed(2)}` },\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","function Price() {\r\n    return <h1>Price</h1>\r\n}\r\n\r\nexport default Price;","/* import { useEffect, useState } from \"react\"; */\r\nimport { useQuery } from \"react-query\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { useParams, useLocation, useMatch } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Routes, Route, Outlet } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\r\nimport Chart from \"./Chart\";\r\nimport Price from \"./Price\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 10vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\n\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\n\r\nconst Overview = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n`;\r\nconst OverviewItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  span:first-child {\r\n    font-size: 10px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\nconst Description = styled.p`\r\n  margin: 20px 0px;\r\n`;\r\n\r\nconst Tabs = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  margin: 25px 0px;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Tab = styled.span<{ isActive: boolean }>`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 7px 0px;\r\n  border-radius: 10px;\r\n  color: ${(props) =>\r\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\r\n  a {\r\n    display: block;\r\n  }\r\n`;\r\n\r\ninterface RouteParams {\r\n  coinId: string;\r\n}\r\n\r\ninterface nameState {\r\n  name: string;\r\n}\r\n\r\ninterface RouteState {\r\n  state: nameState;\r\n}\r\n\r\ninterface InfoData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n  description: string;\r\n  message: string;\r\n  open_source: boolean;\r\n  started_at: string;\r\n  development_status: string;\r\n  hardware_wallet: boolean;\r\n  proof_type: string;\r\n  org_structure: string;\r\n  hash_algorithm: string;\r\n  first_data_at: string;\r\n  last_data_at: string;\r\n}\r\n\r\ninterface PriceData {\r\n  id: object;\r\n  name: object;\r\n  symbol: object;\r\n  rank: object;\r\n  circulating_supply: object;\r\n  total_supply: object;\r\n  max_supply: object;\r\n  beta_value: object;\r\n  first_data_at: object;\r\n  last_updated: object;\r\n  quotes: {\r\n    USD: {\r\n      ath_date: string;\r\n      ath_price: number;\r\n      market_cap: number;\r\n      market_cap_change_24h: number;\r\n      percent_change_1h: number;\r\n      percent_change_1y: number;\r\n      percent_change_6h: number;\r\n      percent_change_7d: number;\r\n      percent_change_12h: number;\r\n      percent_change_15m: number;\r\n      percent_change_24h: number;\r\n      percent_change_30d: number;\r\n      percent_change_30m: number;\r\n      percent_from_price_ath: number;\r\n      price: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n    };\r\n  };\r\n}\r\n\r\nfunction Coin() {\r\n  const params = useParams() as RouteParams;\r\n  const { state } = useLocation() as RouteState;\r\n  const chartMatch = useMatch(\"/:coinId/chart\");\r\n  const priceMatch = useMatch(\"/:coinId/price\");\r\n  const coinId = params.coinId;\r\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\r\n    [\"info\", coinId],\r\n    () => fetchCoinInfo(coinId)\r\n  );\r\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\r\n    [\"tickers\", coinId],\r\n    () => fetchCoinTickers(coinId),\r\n    {\r\n      refetchInterval: 5000,\r\n    }\r\n  );\r\n  /*     const [info, setInfo] = useState<InfoData>();\r\n    const [priceInfo, setPriceInfo] = useState<PriceData>(); \r\n    const [loading, setLoading] = useState(true);\r\n    useEffect(() => {\r\n      (async () =>  {\r\n        const infoData = await (await fetch(`https://api.coinpaprika.com/v1/coins/${coinId}`)).json();\r\n        const priceData = await (await fetch(`https://api.coinpaprika.com/v1/tickers/${coinId}`)).json();\r\n        setInfo(infoData);\r\n        setPriceInfo(priceData);\r\n        setLoading(false);\r\n      })();\r\n    }, [coinId]) */\r\n  const loading = infoLoading || tickersLoading;\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n        </title>\r\n      </Helmet>\r\n      <Header>\r\n        <Title>\r\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n        </Title>\r\n      </Header>\r\n      {loading ? (\r\n        <Loader>\"Loading...\"</Loader>\r\n      ) : (\r\n        <>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Rank:</span>\r\n              <span>{infoData?.rank}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Symbol:</span>\r\n              <span>${infoData?.symbol}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Price:</span>\r\n              <span>${tickersData?.quotes.USD.price /* .toFixed(3) */}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Description>{infoData?.description}</Description>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Total Suply:</span>\r\n              <span>{tickersData?.total_supply}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Max Supply:</span>\r\n              <span>{tickersData?.max_supply}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n\r\n          <Tabs>\r\n            <Tab isActive={chartMatch !== null}>\r\n              <Link to={`/${coinId}/chart`}>Chart</Link>\r\n            </Tab>\r\n            <Tab isActive={priceMatch !== null}>\r\n              <Link to={`/${coinId}/price`}>Price</Link>\r\n            </Tab>\r\n          </Tabs>\r\n          <Outlet />\r\n          <Routes>\r\n            <Route path={`/price`} element={<Price />} />\r\n            <Route path={`/chart`} element={<Chart coinId={coinId} />} />\r\n          </Routes>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Coin;\r\n","/* import { useEffect, useState } from \"react\"; */\r\nimport { Helmet } from \"react-helmet\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoins } from \"../api\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 10vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst CoinsList = styled.ul``;\r\n\r\nconst Coin = styled.li`\r\n  background-color: white;\r\n  color: ${(props) => props.theme.bgColor};\r\n  border-radius: 15px;\r\n  margin-bottom: 10px;\r\n  transition: 0.5s;\r\n  &:hover {\r\n    transform: scale(1.5);\r\n  }\r\n  a {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 20px;\r\n    transition: color 0.2s ease-in;\r\n  }\r\n  &:hover {\r\n    a {\r\n      color: ${(props) => props.theme.accentColor};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\n\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 35px;\r\n  height: 35px;\r\n  margin-right: 10px;\r\n`;\r\n\r\ninterface ICoin {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n}\r\n\r\nfunction Coins() {\r\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\r\n  console.log(data);\r\n  /*   const [coins, setCoins] = useState<CoinInterface[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  useEffect(() => {\r\n    (async () => {\r\n      const response = await fetch('https://api.coinpaprika.com/v1/coins')\r\n      const json = await response.json();\r\n      setCoins(json.slice(0, 100));\r\n      setLoading(false);\r\n    })()\r\n  }, []) */\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>코인</title>\r\n      </Helmet>\r\n      <Header>\r\n        <Title>코인</Title>\r\n      </Header>\r\n      {isLoading ? (\r\n        <Loader>\"Loading...\"</Loader>\r\n      ) : (\r\n        <CoinsList>\r\n          {data?.slice(0, 100).map((coin) => (\r\n            <Coin key={coin.id}>\r\n              <Link\r\n                to={{ pathname: `/${coin.id}` }}\r\n                state={{ name: coin.name }}\r\n              >\r\n                <Img\r\n                  src={`https://cryptocurrencyliveprices.com/img/${coin.id.toLocaleLowerCase()}.png`}\r\n                />\r\n                {coin.name} &rarr;\r\n              </Link>\r\n            </Coin>\r\n          ))}\r\n        </CoinsList>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\nexport default Coins;\r\n","import { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport Coin from \"./routes/Coin\";\r\nimport Coins from \"./routes/Coins\";\r\n\r\nfunction Router() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route path=\"/:coinId/*\" element={<Coin />} />\r\n        <Route path=\"/\" element={<Coins/>} />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\nexport default Router;","import { createGlobalStyle } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from 'react-query/devtools'\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300&display=swap');\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed, \n  figure, figcaption, footer, header, hgroup, \n  menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n  }\n  /* HTML5 display-role reset for older browsers */\n  article, aside, details, figcaption, figure, \n  footer, header, hgroup, menu, nav, section {\n    display: block;\n  }\n  body {\n    line-height: 1;\n  }\n  ol, ul {\n    list-style: none;\n  }\n  blockquote, q {\n    quotes: none;\n  }\n  blockquote:before, blockquote:after,\n  q:before, q:after {\n    content: '';\n    content: none;\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n  *{\n    box-sizing: border-box;\n  }\n  body{\n    font-family:'Source Sans Pro', sans-serif;\n    background-color:${props => props.theme.bgColor};\n    color:${props => props.theme.textColor}\n  }\n  a{\n    text-decoration: none;\n    color:inherit;\n  }\n`;\n\nfunction App() {\n  return (<>\n      <GlobalStyle />\n      <Router />\n      <ReactQueryDevtools initialIsOpen={true}/>\n      </>)\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider  } from \"react-query\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { theme } from \"./theme\";\n\nconst queryClient = new QueryClient()\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const theme:DefaultTheme = {\r\n    bgColor:\"#2f3640\",\r\n    textColor:\"#f5f6fa\",\r\n    accentColor: \"#4cd137\"\r\n}\r\n"],"sourceRoot":""}